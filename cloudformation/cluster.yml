AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 ECS cluster running containers in a private subnet. Supports
             public facing load balancers, private internal load balancers, and
             both internal and external service discovery namespaces.

Parameters:
  CName:
    Type: String
    Default: aaa-dev
    Description: "Elastic Container Service cluster"
  EnvironmentName:
    Type: String
    Default: dev
    Description: "A friendly environment name that will be used for namespacing all cluster resources. Example: staging, qa, or production"
  ECSAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
    Description: The Amazon Machine Image ID used for the cluster, leave it as the default value to get the latest AMI
  EnableBuildResources:
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Enable build

Conditions:
  EnableResources: !Equals
    - !Ref EnableBuildResources
    - 'false'

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://aaa-rbp-bucket.s3.amazonaws.com/vpc.yml
      Parameters:
        Name: !Ref AWS::StackName
        EnvironmentName: !Ref EnvironmentName

  RolesCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://aaa-rbp-bucket.s3.amazonaws.com/roles.yml
      Parameters:
        Name: !Ref AWS::StackName
        EnvironmentName: !Ref EnvironmentName

  SecurityGroups:
    DependsOn: VPC
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://aaa-rbp-bucket.s3.amazonaws.com/securitygroup.yml
      Parameters:
        Name: !Ref AWS::StackName
        EnvironmentName: !Ref EnvironmentName
        Vpc: !GetAtt VPC.Outputs.VpcId 

  ECSServices:
    DependsOn: SecurityGroups
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://aaa-rbp-bucket.s3.amazonaws.com/service_v2.yml
      Parameters:
        ClusterName: !Ref CName
        VPC: !GetAtt VPC.Outputs.VpcId 
        TaskExecutionRole: !GetAtt RolesCluster.Outputs.ECSTaskExecutionRole
        ContainerSecurityGroup: !GetAtt SecurityGroups.Outputs.ContainerSecurityGroup
        SubnetA: !GetAtt VPC.Outputs.PublicSubnetOne
        SubnetB: !GetAtt VPC.Outputs.PublicSubnetTwo

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref CName
  

Outputs:
  VpcId:
    Description: The ID of the VPC that this stack is deployed in
    Value: !GetAtt VPC.Outputs.VpcId
    Export:
      Name: !Sub ${EnvironmentName}:VpcId1
  PublicSubnetOne:
    Description: Public subnet one
    Value: !GetAtt VPC.Outputs.PublicSubnetOne
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetOne1
  PublicSubnetTwo:
    Description: Public subnet two
    Value: !GetAtt VPC.Outputs.PublicSubnetTwo
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetTwo1
  ECSCluster:
    Description: ECS Name Cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${EnvironmentName}:ECSCluster1
  Name:
    Description: Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${EnvironmentName}:Name1
  ContainerSecurityGroup:
    Description: A security group used to allow containers to receive traffic
    Value: !GetAtt SecurityGroups.Outputs.ContainerSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}:ContainerSecurityGroup1
  ECSTaskExecutionRoleName:
    Description: The ARN of the ECS role
    Value: !GetAtt RolesCluster.Outputs.ECSTaskExecutionRole
    Export:
      Name: !Sub ${EnvironmentName}:ECSTaskExecutionRole1