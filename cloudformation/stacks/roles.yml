AWSTemplateFormatVersion: '2010-09-09'
Description: Roles cloudformation. Roles permission to access to cluster ECS.

Parameters:
  Name:
    Type: String
    Description: "A friendly name that will be used for roles."
  EnvironmentName:
    Type: String
    Description: "A friendly environment name that will be used for namespacing all cluster resources. Example: staging, qa, or production"

Resources:
  # This is an IAM role which authorizes ECS to manage resources on your
  # account on your behalf, such as updating your load balancer with the
  # details of where your containers are, so that traffic can reach your
  # containers.
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Name}ECSRole"
      Tags:
        - 
         Key: Environment
         Value:  !Sub ${EnvironmentName}
        - 
         Key: Name
         Value: !Sub ${Name}-ECSRole
        - 
         Key: Project
         Value: !Sub ${Name}-${EnvironmentName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: !Sub "ecs-service-${Name}"
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              # Rules which allow ECS to attach network interfaces to instances
              # on your behalf in order for awsvpc networking mode to work right
              - 'ec2:AttachNetworkInterface'
              - 'ec2:CreateNetworkInterface'
              - 'ec2:CreateNetworkInterfacePermission'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DeleteNetworkInterfacePermission'
              - 'ec2:Describe*'
              - 'ec2:DetachNetworkInterface'

              # Rules which allow ECS to update load balancers on your behalf
              # with the information sabout how to send traffic to your containers
              - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
              - 'elasticloadbalancing:DeregisterTargets'
              - 'elasticloadbalancing:Describe*'
              - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
              - 'elasticloadbalancing:RegisterTargets'
            Resource: '*'

  # This is a role which is used by the ECS tasks themselves.
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Name}EC2TaskExecutionRole"
      Tags:
        - 
         Key: Environment
         Value:  !Sub ${EnvironmentName}
        - 
         Key: Name
         Value: !Sub ${Name}-EC2TaskExecutionRole
        - 
         Key: Project
         Value: !Sub ${Name}-${EnvironmentName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: !Sub "AmazonECSTaskExecutionRolePolicy-${Name}"
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # Allow the ECS Tasks to download images from ECR
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'

                # Allow the ECS tasks to upload logs to CloudWatch
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'

Outputs:
  ECSRole:
    Description: The ARN of the ECS role
    Value: !GetAtt 'ECSRole.Arn'
    Export:
      Name: !Sub ${EnvironmentName}:ECSRole
  ECSTaskExecutionRole:
    Description: The ARN of the ECS role
    Value: !GetAtt 'ECSTaskExecutionRole.Arn'
    Export:
      Name: !Sub ${EnvironmentName}:ECSTaskExecutionRole
  ECSTaskExecutionRoleName:
    Description: The Name of the ECS role
    Value: !Ref 'ECSTaskExecutionRole'
    Export:
      Name: !Sub ${EnvironmentName}:ECSTaskExecutionRoleName